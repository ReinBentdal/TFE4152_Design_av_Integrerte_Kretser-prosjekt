// **Custom imports** 
`include "../../../components/gates.lib"

/* Generated by Yosys 0.10.0 (git sha1 UNKNOWN, clang 13.0.0 -fPIC -Os) */

(* dynports =  1  *)
(* hdlname = "\\PIXEL_SENSOR" *)
(* src = "output/pixelRow.v:2.1-26.10" *)
module \$paramod$1850f0e476e36dbff939940fa2bdad9f281d7d2a\PIXEL_SENSOR (VBN1, RAMP, ERASE, EXPOSE, READ, COUNTER, DATA);
  (* src = "output/pixelRow.v:16.27-16.34" *)
  input [7:0] COUNTER;
  (* src = "output/pixelRow.v:17.33-17.37" *)
  output [7:0] DATA;
  (* src = "output/pixelRow.v:13.13-13.18" *)
  input ERASE;
  (* src = "output/pixelRow.v:14.13-14.19" *)
  input EXPOSE;
  (* src = "output/pixelRow.v:12.13-12.17" *)
  input RAMP;
  (* src = "output/pixelRow.v:15.13-15.17" *)
  input READ;
  (* src = "output/pixelRow.v:11.13-11.17" *)
  input VBN1;
  (* src = "output/pixelRow.v:20.6-20.9" *)
  wire cmp;
  (* src = "output/pixelRow.v:22.12-22.18" *)
  wire [7:0] p_data;
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _0_ (
    .C(cmp),
    .D(COUNTER[0]),
    .Q(p_data[0])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _1_ (
    .C(cmp),
    .D(COUNTER[1]),
    .Q(p_data[1])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _2_ (
    .C(cmp),
    .D(COUNTER[2]),
    .Q(p_data[2])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _3_ (
    .C(cmp),
    .D(COUNTER[3]),
    .Q(p_data[3])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _4_ (
    .C(cmp),
    .D(COUNTER[4]),
    .Q(p_data[4])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _5_ (
    .C(cmp),
    .D(COUNTER[5]),
    .Q(p_data[5])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _6_ (
    .C(cmp),
    .D(COUNTER[6]),
    .Q(p_data[6])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _7_ (
    .C(cmp),
    .D(COUNTER[7]),
    .Q(p_data[7])
  );
  (* src = "output/pixelRow.v:25.2-25.37" *)
  DFF _8_ (
    .C(VBN1),
    .D(VBN1),
    .Q(cmp)
  );
  assign DATA = p_data;
endmodule

(* dynports =  1  *)
(* hdlname = "\\PIXEL_SENSOR" *)
(* src = "output/pixelRow.v:2.1-26.10" *)
module \$paramod$2155719df4bc99dec4198a2aba048f673893fd39\PIXEL_SENSOR (VBN1, RAMP, ERASE, EXPOSE, READ, COUNTER, DATA);
  (* src = "output/pixelRow.v:16.27-16.34" *)
  input [7:0] COUNTER;
  (* src = "output/pixelRow.v:17.33-17.37" *)
  output [7:0] DATA;
  (* src = "output/pixelRow.v:13.13-13.18" *)
  input ERASE;
  (* src = "output/pixelRow.v:14.13-14.19" *)
  input EXPOSE;
  (* src = "output/pixelRow.v:12.13-12.17" *)
  input RAMP;
  (* src = "output/pixelRow.v:15.13-15.17" *)
  input READ;
  (* src = "output/pixelRow.v:11.13-11.17" *)
  input VBN1;
  (* src = "output/pixelRow.v:20.6-20.9" *)
  wire cmp;
  (* src = "output/pixelRow.v:22.12-22.18" *)
  wire [7:0] p_data;
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _0_ (
    .C(cmp),
    .D(COUNTER[0]),
    .Q(p_data[0])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _1_ (
    .C(cmp),
    .D(COUNTER[1]),
    .Q(p_data[1])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _2_ (
    .C(cmp),
    .D(COUNTER[2]),
    .Q(p_data[2])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _3_ (
    .C(cmp),
    .D(COUNTER[3]),
    .Q(p_data[3])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _4_ (
    .C(cmp),
    .D(COUNTER[4]),
    .Q(p_data[4])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _5_ (
    .C(cmp),
    .D(COUNTER[5]),
    .Q(p_data[5])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _6_ (
    .C(cmp),
    .D(COUNTER[6]),
    .Q(p_data[6])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _7_ (
    .C(cmp),
    .D(COUNTER[7]),
    .Q(p_data[7])
  );
  (* src = "output/pixelRow.v:25.2-25.37" *)
  DFF _8_ (
    .C(VBN1),
    .D(VBN1),
    .Q(cmp)
  );
  assign DATA = p_data;
endmodule

(* dynports =  1  *)
(* hdlname = "\\PIXEL_SENSOR" *)
(* src = "output/pixelRow.v:2.1-26.10" *)
module \$paramod$482b965326f1c4fd7f8a39c6ebc2b9bade0cadf8\PIXEL_SENSOR (VBN1, RAMP, ERASE, EXPOSE, READ, COUNTER, DATA);
  (* src = "output/pixelRow.v:16.27-16.34" *)
  input [7:0] COUNTER;
  (* src = "output/pixelRow.v:17.33-17.37" *)
  output [7:0] DATA;
  (* src = "output/pixelRow.v:13.13-13.18" *)
  input ERASE;
  (* src = "output/pixelRow.v:14.13-14.19" *)
  input EXPOSE;
  (* src = "output/pixelRow.v:12.13-12.17" *)
  input RAMP;
  (* src = "output/pixelRow.v:15.13-15.17" *)
  input READ;
  (* src = "output/pixelRow.v:11.13-11.17" *)
  input VBN1;
  (* src = "output/pixelRow.v:20.6-20.9" *)
  wire cmp;
  (* src = "output/pixelRow.v:22.12-22.18" *)
  wire [7:0] p_data;
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _0_ (
    .C(cmp),
    .D(COUNTER[0]),
    .Q(p_data[0])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _1_ (
    .C(cmp),
    .D(COUNTER[1]),
    .Q(p_data[1])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _2_ (
    .C(cmp),
    .D(COUNTER[2]),
    .Q(p_data[2])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _3_ (
    .C(cmp),
    .D(COUNTER[3]),
    .Q(p_data[3])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _4_ (
    .C(cmp),
    .D(COUNTER[4]),
    .Q(p_data[4])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _5_ (
    .C(cmp),
    .D(COUNTER[5]),
    .Q(p_data[5])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _6_ (
    .C(cmp),
    .D(COUNTER[6]),
    .Q(p_data[6])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _7_ (
    .C(cmp),
    .D(COUNTER[7]),
    .Q(p_data[7])
  );
  (* src = "output/pixelRow.v:25.2-25.37" *)
  DFF _8_ (
    .C(VBN1),
    .D(VBN1),
    .Q(cmp)
  );
  assign DATA = p_data;
endmodule

(* dynports =  1  *)
(* hdlname = "\\PIXEL_SENSOR" *)
(* src = "output/pixelRow.v:2.1-26.10" *)
module \$paramod$6b654c3306cca70bce345b07a67a0bfc062f966d\PIXEL_SENSOR (VBN1, RAMP, ERASE, EXPOSE, READ, COUNTER, DATA);
  (* src = "output/pixelRow.v:16.27-16.34" *)
  input [7:0] COUNTER;
  (* src = "output/pixelRow.v:17.33-17.37" *)
  output [7:0] DATA;
  (* src = "output/pixelRow.v:13.13-13.18" *)
  input ERASE;
  (* src = "output/pixelRow.v:14.13-14.19" *)
  input EXPOSE;
  (* src = "output/pixelRow.v:12.13-12.17" *)
  input RAMP;
  (* src = "output/pixelRow.v:15.13-15.17" *)
  input READ;
  (* src = "output/pixelRow.v:11.13-11.17" *)
  input VBN1;
  (* src = "output/pixelRow.v:20.6-20.9" *)
  wire cmp;
  (* src = "output/pixelRow.v:22.12-22.18" *)
  wire [7:0] p_data;
  (* src = "output/pixelRow.v:25.2-25.37" *)
  DFF _0_ (
    .C(VBN1),
    .D(VBN1),
    .Q(cmp)
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _1_ (
    .C(cmp),
    .D(COUNTER[0]),
    .Q(p_data[0])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _2_ (
    .C(cmp),
    .D(COUNTER[1]),
    .Q(p_data[1])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _3_ (
    .C(cmp),
    .D(COUNTER[2]),
    .Q(p_data[2])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _4_ (
    .C(cmp),
    .D(COUNTER[3]),
    .Q(p_data[3])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _5_ (
    .C(cmp),
    .D(COUNTER[4]),
    .Q(p_data[4])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _6_ (
    .C(cmp),
    .D(COUNTER[5]),
    .Q(p_data[5])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _7_ (
    .C(cmp),
    .D(COUNTER[6]),
    .Q(p_data[6])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _8_ (
    .C(cmp),
    .D(COUNTER[7]),
    .Q(p_data[7])
  );
  assign DATA = p_data;
endmodule

(* dynports =  1  *)
(* hdlname = "\\PIXEL_SENSOR" *)
(* src = "output/pixelRow.v:2.1-26.10" *)
module \$paramod$98ca0ba6ab19da98097e8e415fb0621f5a269418\PIXEL_SENSOR (VBN1, RAMP, ERASE, EXPOSE, READ, COUNTER, DATA);
  (* src = "output/pixelRow.v:16.27-16.34" *)
  input [7:0] COUNTER;
  (* src = "output/pixelRow.v:17.33-17.37" *)
  output [7:0] DATA;
  (* src = "output/pixelRow.v:13.13-13.18" *)
  input ERASE;
  (* src = "output/pixelRow.v:14.13-14.19" *)
  input EXPOSE;
  (* src = "output/pixelRow.v:12.13-12.17" *)
  input RAMP;
  (* src = "output/pixelRow.v:15.13-15.17" *)
  input READ;
  (* src = "output/pixelRow.v:11.13-11.17" *)
  input VBN1;
  (* src = "output/pixelRow.v:20.6-20.9" *)
  wire cmp;
  (* src = "output/pixelRow.v:22.12-22.18" *)
  wire [7:0] p_data;
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _0_ (
    .C(cmp),
    .D(COUNTER[0]),
    .Q(p_data[0])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _1_ (
    .C(cmp),
    .D(COUNTER[1]),
    .Q(p_data[1])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _2_ (
    .C(cmp),
    .D(COUNTER[2]),
    .Q(p_data[2])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _3_ (
    .C(cmp),
    .D(COUNTER[3]),
    .Q(p_data[3])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _4_ (
    .C(cmp),
    .D(COUNTER[4]),
    .Q(p_data[4])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _5_ (
    .C(cmp),
    .D(COUNTER[5]),
    .Q(p_data[5])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _6_ (
    .C(cmp),
    .D(COUNTER[6]),
    .Q(p_data[6])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _7_ (
    .C(cmp),
    .D(COUNTER[7]),
    .Q(p_data[7])
  );
  (* src = "output/pixelRow.v:25.2-25.37" *)
  DFF _8_ (
    .C(VBN1),
    .D(VBN1),
    .Q(cmp)
  );
  assign DATA = p_data;
endmodule

(* dynports =  1  *)
(* hdlname = "\\PIXEL_SENSOR" *)
(* src = "output/pixelRow.v:2.1-26.10" *)
module \$paramod$aade62649c3faaa245e79346ff137eaf656af767\PIXEL_SENSOR (VBN1, RAMP, ERASE, EXPOSE, READ, COUNTER, DATA);
  (* src = "output/pixelRow.v:16.27-16.34" *)
  input [7:0] COUNTER;
  (* src = "output/pixelRow.v:17.33-17.37" *)
  output [7:0] DATA;
  (* src = "output/pixelRow.v:13.13-13.18" *)
  input ERASE;
  (* src = "output/pixelRow.v:14.13-14.19" *)
  input EXPOSE;
  (* src = "output/pixelRow.v:12.13-12.17" *)
  input RAMP;
  (* src = "output/pixelRow.v:15.13-15.17" *)
  input READ;
  (* src = "output/pixelRow.v:11.13-11.17" *)
  input VBN1;
  (* src = "output/pixelRow.v:20.6-20.9" *)
  wire cmp;
  (* src = "output/pixelRow.v:22.12-22.18" *)
  wire [7:0] p_data;
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _0_ (
    .C(cmp),
    .D(COUNTER[0]),
    .Q(p_data[0])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _1_ (
    .C(cmp),
    .D(COUNTER[1]),
    .Q(p_data[1])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _2_ (
    .C(cmp),
    .D(COUNTER[2]),
    .Q(p_data[2])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _3_ (
    .C(cmp),
    .D(COUNTER[3]),
    .Q(p_data[3])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _4_ (
    .C(cmp),
    .D(COUNTER[4]),
    .Q(p_data[4])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _5_ (
    .C(cmp),
    .D(COUNTER[5]),
    .Q(p_data[5])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _6_ (
    .C(cmp),
    .D(COUNTER[6]),
    .Q(p_data[6])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _7_ (
    .C(cmp),
    .D(COUNTER[7]),
    .Q(p_data[7])
  );
  (* src = "output/pixelRow.v:25.2-25.37" *)
  DFF _8_ (
    .C(VBN1),
    .D(VBN1),
    .Q(cmp)
  );
  assign DATA = p_data;
endmodule

(* dynports =  1  *)
(* hdlname = "\\PIXEL_SENSOR" *)
(* src = "output/pixelRow.v:2.1-26.10" *)
module \$paramod$c1779105b47a492e95a170d797783cce44f65393\PIXEL_SENSOR (VBN1, RAMP, ERASE, EXPOSE, READ, COUNTER, DATA);
  (* src = "output/pixelRow.v:16.27-16.34" *)
  input [7:0] COUNTER;
  (* src = "output/pixelRow.v:17.33-17.37" *)
  output [7:0] DATA;
  (* src = "output/pixelRow.v:13.13-13.18" *)
  input ERASE;
  (* src = "output/pixelRow.v:14.13-14.19" *)
  input EXPOSE;
  (* src = "output/pixelRow.v:12.13-12.17" *)
  input RAMP;
  (* src = "output/pixelRow.v:15.13-15.17" *)
  input READ;
  (* src = "output/pixelRow.v:11.13-11.17" *)
  input VBN1;
  (* src = "output/pixelRow.v:20.6-20.9" *)
  wire cmp;
  (* src = "output/pixelRow.v:22.12-22.18" *)
  wire [7:0] p_data;
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _0_ (
    .C(cmp),
    .D(COUNTER[0]),
    .Q(p_data[0])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _1_ (
    .C(cmp),
    .D(COUNTER[1]),
    .Q(p_data[1])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _2_ (
    .C(cmp),
    .D(COUNTER[2]),
    .Q(p_data[2])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _3_ (
    .C(cmp),
    .D(COUNTER[3]),
    .Q(p_data[3])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _4_ (
    .C(cmp),
    .D(COUNTER[4]),
    .Q(p_data[4])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _5_ (
    .C(cmp),
    .D(COUNTER[5]),
    .Q(p_data[5])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _6_ (
    .C(cmp),
    .D(COUNTER[6]),
    .Q(p_data[6])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _7_ (
    .C(cmp),
    .D(COUNTER[7]),
    .Q(p_data[7])
  );
  (* src = "output/pixelRow.v:25.2-25.37" *)
  DFF _8_ (
    .C(VBN1),
    .D(VBN1),
    .Q(cmp)
  );
  assign DATA = p_data;
endmodule

(* dynports =  1  *)
(* hdlname = "\\PIXEL_SENSOR" *)
(* src = "output/pixelRow.v:2.1-26.10" *)
module \$paramod$d4124f325554042c7a7e07b30f48865fd3145f17\PIXEL_SENSOR (VBN1, RAMP, ERASE, EXPOSE, READ, COUNTER, DATA);
  (* src = "output/pixelRow.v:16.27-16.34" *)
  input [7:0] COUNTER;
  (* src = "output/pixelRow.v:17.33-17.37" *)
  output [7:0] DATA;
  (* src = "output/pixelRow.v:13.13-13.18" *)
  input ERASE;
  (* src = "output/pixelRow.v:14.13-14.19" *)
  input EXPOSE;
  (* src = "output/pixelRow.v:12.13-12.17" *)
  input RAMP;
  (* src = "output/pixelRow.v:15.13-15.17" *)
  input READ;
  (* src = "output/pixelRow.v:11.13-11.17" *)
  input VBN1;
  (* src = "output/pixelRow.v:20.6-20.9" *)
  wire cmp;
  (* src = "output/pixelRow.v:22.12-22.18" *)
  wire [7:0] p_data;
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _0_ (
    .C(cmp),
    .D(COUNTER[0]),
    .Q(p_data[0])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _1_ (
    .C(cmp),
    .D(COUNTER[1]),
    .Q(p_data[1])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _2_ (
    .C(cmp),
    .D(COUNTER[2]),
    .Q(p_data[2])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _3_ (
    .C(cmp),
    .D(COUNTER[3]),
    .Q(p_data[3])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _4_ (
    .C(cmp),
    .D(COUNTER[4]),
    .Q(p_data[4])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _5_ (
    .C(cmp),
    .D(COUNTER[5]),
    .Q(p_data[5])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _6_ (
    .C(cmp),
    .D(COUNTER[6]),
    .Q(p_data[6])
  );
  (* src = "output/pixelRow.v:23.2-23.42" *)
  DFF _7_ (
    .C(cmp),
    .D(COUNTER[7]),
    .Q(p_data[7])
  );
  (* src = "output/pixelRow.v:25.2-25.37" *)
  DFF _8_ (
    .C(VBN1),
    .D(VBN1),
    .Q(cmp)
  );
  assign DATA = p_data;
endmodule

(* dynports =  1  *)
(* top =  1  *)
(* src = "output/pixelRow.v:28.1-64.10" *)
module PIXEL_ROW(VBN1, RAMP, ERASE, EXPOSE, READ, COUNTER, DATA_OUT);
  (* src = "output/pixelRow.v:42.14-42.21" *)
  input [7:0] COUNTER;
  (* src = "output/pixelRow.v:43.55-43.63" *)
  output [63:0] DATA_OUT;
  (* src = "output/pixelRow.v:39.13-39.18" *)
  input ERASE;
  (* src = "output/pixelRow.v:40.13-40.19" *)
  input EXPOSE;
  (* src = "output/pixelRow.v:38.13-38.17" *)
  input RAMP;
  (* src = "output/pixelRow.v:41.13-41.17" *)
  input READ;
  (* src = "output/pixelRow.v:37.13-37.17" *)
  input VBN1;
  (* src = "output/pixelRow.v:53.6-61.5" *)
  \$paramod$c1779105b47a492e95a170d797783cce44f65393\PIXEL_SENSOR  \genblk1[0].ps  (
    .COUNTER(COUNTER),
    .DATA(DATA_OUT[7:0]),
    .ERASE(ERASE),
    .EXPOSE(EXPOSE),
    .RAMP(RAMP),
    .READ(READ),
    .VBN1(VBN1)
  );
  (* src = "output/pixelRow.v:53.6-61.5" *)
  \$paramod$1850f0e476e36dbff939940fa2bdad9f281d7d2a\PIXEL_SENSOR  \genblk1[1].ps  (
    .COUNTER(COUNTER),
    .DATA(DATA_OUT[15:8]),
    .ERASE(ERASE),
    .EXPOSE(EXPOSE),
    .RAMP(RAMP),
    .READ(READ),
    .VBN1(VBN1)
  );
  (* src = "output/pixelRow.v:53.6-61.5" *)
  \$paramod$6b654c3306cca70bce345b07a67a0bfc062f966d\PIXEL_SENSOR  \genblk1[2].ps  (
    .COUNTER(COUNTER),
    .DATA(DATA_OUT[23:16]),
    .ERASE(ERASE),
    .EXPOSE(EXPOSE),
    .RAMP(RAMP),
    .READ(READ),
    .VBN1(VBN1)
  );
  (* src = "output/pixelRow.v:53.6-61.5" *)
  \$paramod$d4124f325554042c7a7e07b30f48865fd3145f17\PIXEL_SENSOR  \genblk1[3].ps  (
    .COUNTER(COUNTER),
    .DATA(DATA_OUT[31:24]),
    .ERASE(ERASE),
    .EXPOSE(EXPOSE),
    .RAMP(RAMP),
    .READ(READ),
    .VBN1(VBN1)
  );
  (* src = "output/pixelRow.v:53.6-61.5" *)
  \$paramod$aade62649c3faaa245e79346ff137eaf656af767\PIXEL_SENSOR  \genblk1[4].ps  (
    .COUNTER(COUNTER),
    .DATA(DATA_OUT[39:32]),
    .ERASE(ERASE),
    .EXPOSE(EXPOSE),
    .RAMP(RAMP),
    .READ(READ),
    .VBN1(VBN1)
  );
  (* src = "output/pixelRow.v:53.6-61.5" *)
  \$paramod$2155719df4bc99dec4198a2aba048f673893fd39\PIXEL_SENSOR  \genblk1[5].ps  (
    .COUNTER(COUNTER),
    .DATA(DATA_OUT[47:40]),
    .ERASE(ERASE),
    .EXPOSE(EXPOSE),
    .RAMP(RAMP),
    .READ(READ),
    .VBN1(VBN1)
  );
  (* src = "output/pixelRow.v:53.6-61.5" *)
  \$paramod$98ca0ba6ab19da98097e8e415fb0621f5a269418\PIXEL_SENSOR  \genblk1[6].ps  (
    .COUNTER(COUNTER),
    .DATA(DATA_OUT[55:48]),
    .ERASE(ERASE),
    .EXPOSE(EXPOSE),
    .RAMP(RAMP),
    .READ(READ),
    .VBN1(VBN1)
  );
  (* src = "output/pixelRow.v:53.6-61.5" *)
  \$paramod$482b965326f1c4fd7f8a39c6ebc2b9bade0cadf8\PIXEL_SENSOR  \genblk1[7].ps  (
    .COUNTER(COUNTER),
    .DATA(DATA_OUT[63:56]),
    .ERASE(ERASE),
    .EXPOSE(EXPOSE),
    .RAMP(RAMP),
    .READ(READ),
    .VBN1(VBN1)
  );
endmodule
